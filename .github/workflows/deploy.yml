name: Deploy OCPP Server to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_URL=${{ secrets.ECR_REPOSITORY_URL }}" >> $GITHUB_ENV
          echo "EC2_HOST=${{ secrets.EC2_HOST }}" >> $GITHUB_ENV

      - name: Download env file from S3
        run: aws s3 cp s3://charging-prod-envs/ocpp.env .env

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URL }}:latest .
          docker push ${{ secrets.ECR_REPOSITORY_URL }}:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update -y
            sudo apt install -y docker.io awscli
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ubuntu
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URL
            sudo docker pull $ECR_REPOSITORY_URL:latest
            sudo docker stop ocpp-server || true
            sudo docker rm ocpp-server || true
            sudo docker run -d --name ocpp-server -p 8080:8080 --env-file .env $ECR_REPOSITORY_URL:latest
