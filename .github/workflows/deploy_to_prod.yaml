name: Deploy OCPP to Production Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Retrieving key and connect to remote server
      env:
        env_file_path: "${{ vars.ENV_DIR }}/${{ secrets.ENV_FILE_NAME }}"
        key_file_path: "${{ vars.PRIVATE_KEY_DIR }}/${{ secrets.PRIVATE_KEY_NAME }}"
      run: |
        aws s3 cp s3://${{ vars.S3_BUCKET_NAME }}/$env_file_path ./.env
        sudo chmod 600 ./.env

        mkdir -p ~/.ssh
        aws s3 cp s3://${{ vars.S3_BUCKET_NAME }}/$key_file_path ~/.ssh/server_key
        sudo chmod 600 ~/.ssh/server_key
        ssh-keyscan -H ${{ secrets.SERVER_DNS }} >> ~/.ssh/known_hosts

    - name: Setup and build the project
      run: |
        npm install
        npm run build

    - name: Deploy with rsync from dist to the remote server
      uses: burnett01/rsync-deployments@7.0.0
      with:
        switches: --mkpath --rsync-path="sudo rsync" --delete -avzr
        path: /
        remote_path: /home/ubuntu/ocpp_server
        remote_host: ${{ secrets.SERVER_DNS }}
        remote_user: ubuntu
        remote_key: ${{secrets.PRIVATE_ACCESS_KEY}}


    - name: Setup and build the project
      run: |
        ssh -i ~/.ssh/server_key ubuntu@${{ secrets.SERVER_DNS }} << 'EOF'
        sudo chown -R ubuntu:ubuntu /home/ubuntu/ocpp_server
        pm2 init
        cat > ecosystem.config.js << 'CONFIG'
          module.exports = {
            apps: [
              {
                name: 'ocpp_server',
                script: 'npm',
                args: 'run start',
                cwd: './ocpp_server',
                output: '/home/ubuntu/logs/out.log',
                error: '/home/ubuntu/logs/error.log',
                log_date_format: 'YYYY-MM-DD HH:mm:ss',
                env: {
                  NODE_ENV: 'production'
                }
              }
            ]
          }
        CONFIG
        # Only restart if app is already running
        if pm2 describe ocpp_server > /dev/null; then
          pm2 reload ecosystem.config.js --update-env
        else
          pm2 start ecosystem.config.js
        fi
        pm2 save

        # setup nginx
        cd /etc/nginx/sites-available/
        sudo tee ocppserver.vineMobility.com > /dev/null << 'CONFIG'
        server {
            listen 80;
            server_name ocppserver.vinemobility.com;
          location / {
                  proxy_pass http://localhost:8080;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
        }
        CONFIG
        sudo ln -s /etc/nginx/sites-available/ocppserver.vineMobility.com /etc/nginx/sites-enabled/
        sudo nginx -t
        sudo systemctl restart nginx
        EOF
